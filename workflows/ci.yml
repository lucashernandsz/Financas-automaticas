name: CI Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  android-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Fazer checkout do código
        uses: actions/checkout@v3

      - name: Instalar JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache do Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}

      - name: Rodar testes unitários
        run: ./gradlew testDebugUnitTest

      - name: Executar lint estático
        run: ./gradlew lintDebug

  build-apk:
    needs: android-ci
    runs-on: ubuntu-latest
    steps:
      - name: Fazer checkout do código
        uses: actions/checkout@v3

      - name: Instalar JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache do Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}

      - name: Limpar build anterior
        run: ./gradlew clean

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Publicar Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release-apk:
    needs: build-apk
    runs-on: ubuntu-latest
    steps:
      - name: Fazer checkout do código
        uses: actions/checkout@v3

      - name: Instalar JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Decodificar keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > release.jks

      - name: Build Release APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS:        ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD:     ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=release.jks \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD

      - name: Publicar Release APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk
