name: CI Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  android-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Instalar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
      - name: Garantir permissão do Gradle Wrapper
        run: chmod +x gradlew
      - name: Rodar testes unitários
        run: ./gradlew testDebugUnitTest
      - name: Executar lint estático
        run: ./gradlew lintDebug

  build-apk:
    needs: android-ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Instalar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
      - name: Limpar build anterior
        run: ./gradlew clean
      - name: Build Debug APK
        run: ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release-apk:
    needs: build-apk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Instalar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Decodificar keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" \  
              | base64 --decode > release.jks
      - name: Build Release AAB
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS:        ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD:     ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=release.jks \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD
      - uses: actions/upload-artifact@v4
        with:
          name: app-release.aab
          path: app/build/outputs/bundle/release/app-release.aab

  deploy-google-play:
    needs: release-apk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Instalar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Decodificar keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" \  
              | base64 --decode > release.jks
      - name: (Re)Gerar AAB Release
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS:        ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD:     ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=release.jks \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD
      - name: Upload para Google Play (Internal track)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.nate.autofinance
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
